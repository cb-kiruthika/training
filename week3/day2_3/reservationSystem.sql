USE Reservation_System;
DROP TABLE IF EXISTS TrainCoaches;
DROP TABLE IF EXISTS Trains;
DROP TABLE IF EXISTS Coaches;
DROP TABLE IF EXISTS Bookings;
DROP TABLE IF EXISTS TrainRouteMaps;
DROP TABLE IF EXISTS Routes;
DROP TABLE IF EXISTS Stations;
DROP TABLE IF EXISTS Users;

CREATE TABLE Trains(
	TrainNo VARCHAR(20) NOT NULL,
	TrainName VARCHAR(30) NOT NULL,
	PRIMARY KEY (TrainNo)
);
CREATE TABLE Coaches(
	CoachCode VARCHAR(20) NOT NULL,
	CostPerKm FLOAT DEFAULT NULL,
	PRIMARY KEY (CoachCode )
);
CREATE TABLE TrainCoaches(
	TrainNo VARCHAR(20) NOT NULL,
	CoachCode VARCHAR(20) NOT NULL,
	NoOfSeats INT DEFAULT NULL,
	FOREIGN KEY (TrainNo) REFERENCES Trains (TrainNo) ON DELETE CASCADE,
	FOREIGN KEY (CoachCode) REFERENCES Coaches (CoachCode) ON DELETE CASCADE
);
CREATE TABLE Stations(
	StationId VARCHAR(20) NOT NULL,
	StationCode VARCHAR(20) DEFAULT NULL,
	PRIMARY KEY (StationId)
);
CREATE TABLE Routes (
	RouteId VARCHAR(20) NOT NULL,
	OriginStationId VARCHAR(20) DEFAULT NULL,
	DestinationStationId VARCHAR(20) DEFAULT NULL,
	DistanceInKms INT DEFAULT NULL,
	PRIMARY KEY (RouteId),
	FOREIGN KEY (OriginStationId) REFERENCES Stations(StationId),
	FOREIGN KEY (DestinationStationId) REFERENCES Stations(StationId)
);
CREATE TABLE Bookings(
	BookingRefNo VARCHAR(20) NOT NULL,
	RouteId VARCHAR(20) DEFAULT NULL,
	TrainNo VARCHAR(20) DEFAULT NULL,
	CoachCode VARCHAR(20) DEFAULT NULL,
	DateOfJourney DATE DEFAULT NULL,
	DateOfBooking DATE DEFAULT NULL,
	NoOfTickets INT DEFAULT NULL,
	PRIMARY KEY (BookingRefNo),
	FOREIGN KEY (RouteId) REFERENCES Routes(RouteId),
	FOREIGN KEY (TrainNo) REFERENCES Trains(TrainNo),
	FOREIGN KEY (CoachCode) REFERENCES Coaches(CoachCode)
);
CREATE TABLE TrainRouteMaps(
	RouteId VARCHAR(20) DEFAULT NULL,
	TrainNo VARCHAR(20) DEFAULT NULL,
	ArrivalTime TIME DEFAULT NULL, 
	DepartureTime TIME DEFAULT NULL,
	DurationInMins INT DEFAULT NULL,
	FOREIGN KEY (RouteId) REFERENCES Routes(RouteId),
	FOREIGN KEY (TrainNo) REFERENCES Trains(TrainNo)
);

CREATE TABLE Users(
	UserId VARCHAR(20) NOT NULL,
	LoginId VARCHAR(20) NOT NULL,
	LPassword VARCHAR(30) NOT NULL,
	PRIMARY KEY (UserId)
);


/*queries*/
--1
SELECT TrainName FROM Trains;

--2
SELECT T2.StationCode AS ORIGIN, T1.StationCode AS DESTINATION, DistanceInKms 
	FROM Routes 
	INNER JOIN Stations AS T2 ON OriginStationId = T2.StationId 
	INNER JOIN STATIONS AS T1 ON DESTINATIONSTATIONID = T1.STATIONID;

--3
SELECT TRAINNAME,SUM(NOOFSEATS) AS TOTALSEATS  
	FROM TRAINCOACHES 
	INNER JOIN TRAINS ON TRAINS.TRAINNO=TRAINCOACHES.TRAINNO 
	GROUP BY TRAINCOACHES.TRAINNO;

--4
SELECT T2.STATIONCODE AS ORIGIN, T1.STATIONCODE AS DESTINATION, DISTANCEINKMS 
	FROM ROUTES 
	INNER JOIN STATIONS AS T2 ON ORIGINSTATIONID = T2.STATIONID 
	INNER JOIN (
		SELECT * FROM STATIONS WHERE STATIONCODE ='BANGALORE'
		) AS T1 ON DESTINATIONSTATIONID = T1.STATIONID ;

--5
SELECT T2.STATIONCODE AS ORIGIN, T1.STATIONCODE AS DESTINATION, DISTANCEINKMS 
	FROM ROUTES 
	INNER JOIN STATIONS AS T2 ON ORIGINSTATIONID = T2.STATIONID 
	INNER JOIN STATIONS AS T1 ON DESTINATIONSTATIONID = T1.STATIONID 
	HAVING ORIGIN IN ('BANGALORE', 'CALCUTTA', 'CHENNAI');

--6
SELECT * FROM BOOKINGS 
	WHERE DATEOFBOOKING 
	BETWEEN '2004-12-31' AND '2006-01-01';

--7
SELECT * FROM TRAINS 
	WHERE TRAINNAME REGEXP '^B';

--8
SELECT * FROM BOOKINGS 
	WHERE DATEOFBOOKING IS NOT NULL;

--9
SELECT * FROM BOOKINGS 
	WHERE DATEOFBOOKING BETWEEN '2005-12-31' AND '2007-01-01' AND DATEOFJOURNEY BETWEEN '2006-12-31' AND '2007-01-01' ;

--10
SELECT TRAINNAME,COUNT(COACHCODE)  AS TOTALCOACHS  
	FROM TRAINCOACHES 
	INNER JOIN TRAINS ON TRAINS.TRAINNO=TRAINCOACHES.TRAINNO 
	GROUP BY TRAINCOACHES.TRAINNO;

--11
SELECT COUNT(*) 
	FROM BOOKINGS 
	WHERE TRAINNO = '14198';

--12
SELECT SUM(NOOFTICKETS) AS TOTAL 
	FROM BOOKINGS 
	WHERE TRAINNO = '14198';

--13
SELECT T2.STATIONCODE AS ORIGIN, T1.STATIONCODE AS DESTINATION, DISTANCEINKMS 
	FROM (
		SELECT *,MIN(DISTANCEINKMS) 
			FROM ROUTES 
			HAVING DISTANCEINKMS = MIN(DISTANCEINKMS)
		) AS T
	INNER JOIN STATIONS AS T2 ON T.ORIGINSTATIONID = T2.STATIONID 
	INNER JOIN STATIONS AS T1 ON T.DESTINATIONSTATIONID = T1.STATIONID;

--14
SELECT TRAINNO,SUM(NOOFTICKETS) AS TOTAL 
	FROM BOOKINGS 
	GROUP BY TRAINNO;

--15
SELECT COACHCODE, 50*COSTPERKM AS COSTFOR50KMS 
	FROM COACHES;

--16
SELECT TRAINNAME,DEPARTURETIME 
	FROM TRAINS 
	INNER JOIN  (
		SELECT DEPARTURETIME,TRAINNO FROM TRAINROUTEMAPS  
		WHERE ROUTEID IN  (
			SELECT ROUTEID FROM ROUTES 
			INNER JOIN STATIONS ON DESTINATIONSTATIONID = STATIONID 
			WHERE STATIONCODE = 'BANGALORE'
			) 
		) AS T ON TRAINS.TRAINNO = T.TRAINNO;

--17
SELECT TRAINNAME 
	FROM TRAINS 
	INNER JOIN (
		SELECT TRAINNO,SUM(NOOFTICKETS) 
		FROM BOOKINGS 
		HAVING SUM(NOOFTICKETS) >500
		) AS T ON T.TRAINNO = TRAINS.TRAINNO;

--18
SELECT TRAINNAME 
	FROM TRAINS 
	INNER JOIN (
		SELECT TRAINNO,SUM(NOOFTICKETS) 
		FROM BOOKINGS 
		HAVING SUM(NOOFTICKETS) <50
		) AS T ON T.TRAINNO = TRAINS.TRAINNO;

--19
SELECT TRAINNAME,ORIGIN,DESTINATION,COACHCODE 
	FROM TRAINS 
	INNER JOIN BOOKINGS ON TRAINS.TRAINNO = BOOKINGS.TRAINNO 
	INNER JOIN (
		SELECT ROUTEID, T2.STATIONCODE AS ORIGIN, T1.STATIONCODE AS DESTINATION, DISTANCEINKMS 
		FROM ROUTES 
		INNER JOIN STATIONS AS T2 ON ORIGINSTATIONID = T2.STATIONID 
		INNER JOIN STATIONS AS T1 ON DESTINATIONSTATIONID = T1.STATIONID
		) AS T ON T.ROUTEID = BOOKINGS.ROUTEID 
	WHERE DATEOFJOURNEY >'2015-02-25';

--20
SELECT TRAINNAME 
	FROM TRAINS 
	INNER JOIN TRAINROUTEMAPS ON TRAINS.TRAINNO = TRAINROUTEMAPS.TRAINNO 
	WHERE ROUTEID IN (
		SELECT ROUTEID 
		FROM ROUTES 
		INNER JOIN STATIONS AS T1 ON T1.STATIONID = ROUTES.ORIGINSTATIONID 
		INNER JOIN STATIONS AS T2 ON T2.STATIONID = DESTINATIONSTATIONID 
		WHERE T1.STATIONCODE = 'MYSORE' AND T2.STATIONCODE = 'CHENNAI'
		);

--21
SELECT TRAINNAME 
	FROM TRAINS 
	INNER JOIN BOOKINGS ON TRAINS.TRAINNO = BOOKINGS.TRAINNO 
	WHERE DATEOFBOOKING < CURTIME();

